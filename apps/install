#!/bin/bash

# /*
#	This file is part of ghtml.
#
#    ghtml is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    ghtml is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with ghtml.  If not, see <http://www.gnu.org/licenses/>.
#
# */

group="$1"; test $# -gt 0 && shift 1;

test "$1" = '-e' && { exec=true; test $# -gt 0 && shift 1; }

title="$1";

test $# -gt 0 && { shift 1; }
 
this="$0";
localPath="${this%/*}";
installDefault="/usr/bin";
installDir="${INSTALLDIR:-$installDefault}";

test "$group" = --help || test "$group" = -h || test "$group" = '-?' || \
test -z "$group" && {

cat <<EOF

USAGE: $this [GROUP] [-e] [TITLE]

DESCRIPTION: Install the application by its GROUP name and
TITLE to environment variable INSTALLDIR or $installDefault

GROUP: The name of the path in: $localPath
TITLE: The name of the file in: $localPath/GROUP

If option -e is supplied, execute $localPath/GROUP/TITLE
with remaining arguments. If TITLE is not supplied with -e,
list all executables in $localPath/GROUP

If TITLE is not supplied, execute $localPath/GROUP/@group
if that program is not present, try to
install $localPath/GROUP/GROUP $installDir
and if that fails show a listing of all valid resources in
$localPath/GROUP


if TITLE is -- all following arguments are passed to
$localPath/GROUP/@group

EOF

test -w "$installDir" ||
echo You must have sufficient privileges to perform this operation.$'\n'

test -n $1;

exit;

}

byInstallGroup="$localPath/$group/@group";
byInstallGroupTitle="$localPath/$group/$title";
byApplication="$localPath/$group/$group";

test "$exec" = "true" && {

	test -x "$byInstallGroupTitle" && test -n "$title"  && {
		exec "$byInstallGroupTitle" "$@";
	} || {
		echo '\n'"Listing of executable targets for $group:"'\n'
		(
			for file in `cd "$localPath/$group"; printf "%s\n" *`; do
				test -x "$localPath/$group/$file" && {
					haveTargets=true;
					echo "$file";
				}
			done
			test "$haveTargets" = "true" || echo no targets available 'for' $group.;
		);  echo ""; 
	};  exit;

}

test -z "$title" || test "$title" = '--' && {
	test -e "$byInstallGroup" && { (
		export this group title localPath installDefault installDir \
		byApplication byInstallGroup; exec "$byInstallGroup" "$@";
	);   exit;
	}
	resource="$byApplication";
} || {
	resource="$byInstallGroupTitle";
}

echo "";

test ! -e "$resource" && {
	(   cd "$localPath/$group" 2>&- && {

		echo "Listing of resources in $group:"$'\n'; list=`echo -n *`;

	}
		test -z "$list" || test "$list" = '*' && {
			echo no resources available 'for' $group.$'\n';
		} || echo "$list"R'\n';

	);  exit 1;
}

test -w "$installDir" || {

	echo You don\'t have sufficient privileges to$'\n'"install" \
	\'$resource\' to \'$installDir\'$'\n';

	exit 1;
} >&2;

status=`cp -vt "$installDir" "$resource" 2>&- || \
echo -n "$this: $group: installation failed to copy: " >&2;`;

echo "$status";

echo "";

